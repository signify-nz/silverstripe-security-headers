.modal--gridfield-delete-relations {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1050;
  display: none;
  width: 100%;
  height: 100%;
  overflow: hidden;
  outline: 0;
}

.modal--gridfield-delete-relations .fade {
  transition: opacity 0.15s linear;
}

.modal--gridfield-delete-relations .modal-dialog {
  height: calc(100% - 53px);
  position: relative;
  max-height: 600px;
  width: auto;
  margin: 0.5rem;
  pointer-events: none;
}

@media (min-width: 900px) {
  .modal--gridfield-delete-relations .modal-dialog {
    max-width: 900px;
  }
}

@media (min-width: 544px) {
  .modal--gridfield-delete-relations .modal-dialog {
    height: calc(100% - 1rem);
    width: calc(100% - 0.5rem);
    margin: 1.75rem auto;
  }
}

.modal--gridfield-delete-relations .modal-dialog .form-group:last-of-type,
.modal--gridfield-delete-relations .modal-dialog .form-group:last-of-type .form-group {
  margin-bottom: 0;
}

.modal--gridfield-delete-relations .modal-dialog .advanced {
  display: none;
}

.modal--gridfield-delete-relations .modal__dialog--scrollable {
  overflow: auto;
}

.modal--gridfield-delete-relations.fade .modal-dialog {
  transition: transform 0.3s ease-out;
  transform: translateY(-50px);
}

.modal--gridfield-delete-relations .modal-content {
  position: relative;
  background-color: white;
  width: 100%;
  height: auto;
  min-height: 0;
  max-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: visible;
  border: 0;
  pointer-events: auto;
  background-clip: padding-box;
  border-radius: 0.5rem;
  outline: 0;
}

.modal--gridfield-delete-relations.show {
  display: block;
}

.modal--gridfield-delete-relations.show .modal-dialog {
  transform: none;
}

.modal--gridfield-delete-relations.show .modal-content {
  overflow-y: auto;
  pointer-events: all;
}

.modal--gridfield-delete-relations .modal-header {
  min-height: 53px;
  color: #566B8D;
  background-color: #F4F6F8;
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding: 0.76925rem 1.5385rem;
  border-bottom: 1px solid #E5E5E5;
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.modal--gridfield-delete-relations .modal-header .close {
  position: relative;
  z-index: 2;
  height: 32px;
  opacity: 1;
  margin-top: 0;
  margin-right: -1.5385rem;
  color: #566B8D;
  /* stylelint-disable-next-line no-descending-specificity */
}

.modal--gridfield-delete-relations .modal-header .close span {
  display: none;
}

.modal--gridfield-delete-relations .modal-header .modal-title {
  font-size: 19px;
  font-weight: normal;
}

.modal--gridfield-delete-relations .modal__close-button,
.modal--gridfield-delete-relations .modal-header .close {
  opacity: 1;
  /* stylelint-disable-next-line no-descending-specificity */
}

.modal--gridfield-delete-relations .modal__close-button::before,
.modal--gridfield-delete-relations .modal-header .close::before {
  content: "D";
  color: #566B8D;
  position: relative;
  top: -0.2em;
  font-size: 22px;
  /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */
  font-family: silverstripe;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transition: color 0.3s;
}

.modal--gridfield-delete-relations .modal__close-button:not(.disabled):hover,
.modal--gridfield-delete-relations .modal-header .close:not(.disabled):hover {
  opacity: 1;
}

.modal--gridfield-delete-relations .modal__close-button span,
.modal--gridfield-delete-relations .modal-header .close span {
  display: none;
}

.modal--gridfield-delete-relations .modal-body {
  position: relative;
  flex: 1 1 auto;
  padding: 20px;
}

.modal--gridfield-delete-relations .modal-footer {
  background-color: white;
  border-top: 0;
  padding-top: 0;
  justify-content: flex-start;
}

.modal--gridfield-delete-relations .modal__response {
  overflow: auto;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  height: calc(100% + 53px);
  width: 100%;
  background: #F4F6F8;
  border-radius: 1rem;
  z-index: 1;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.5385rem 1.5385rem;
  -webkit-animation: modal--prevent-overflow 1.2s;
          animation: modal--prevent-overflow 1.2s;
}

@-webkit-keyframes modal--prevent-overflow {
  from {
    overflow: hidden;
  }

  to {
    overflow: auto;
  }
}

@keyframes modal--prevent-overflow {
  from {
    overflow: hidden;
  }

  to {
    overflow: auto;
  }
}

.modal--gridfield-delete-relations .modal__response--good,
.modal--gridfield-delete-relations .modal__response--error {
  font-size: 19px;
  /* stylelint-disable-next-line no-descending-specificity */
  /* stylelint-disable-next-line no-descending-specificity */
}

.modal--gridfield-delete-relations .modal__response--good span,
.modal--gridfield-delete-relations .modal__response--error span {
  -webkit-animation: modal--slideup 0.6s;
          animation: modal--slideup 0.6s;
}

@-webkit-keyframes modal--slideup {
  from {
    transform: translateY(200%);
    opacity: 0.5;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes modal--slideup {
  from {
    transform: translateY(200%);
    opacity: 0.5;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modal--gridfield-delete-relations .modal__response--good span::before,
.modal--gridfield-delete-relations .modal__response--error span::before {
  /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */
  font-family: silverstripe;
  margin-bottom: 5px;
  font-size: 48px;
  display: block;
  padding-bottom: 5px;
}

.modal--gridfield-delete-relations .modal__response--good span::before {
  content: "O";
  color: #D4EDDA;
}

.modal--gridfield-delete-relations .modal__response--error span::before {
  content: "#";
  color: #F8D7DA;
}

.modal-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1040;
  width: 100vw;
  height: 100vh;
  background-color: #000;
}

.modal-backdrop.fade {
  opacity: 0;
}

.modal-backdrop.show {
  opacity: 0.5;
}

.fieldgroup--no-left {
  display: flex;
  align-items: flex-end;
}

.fieldgroup--no-left .fieldgroup-field.first {
  padding-bottom: 8px;
}

.field.checkbox--no-right {
  padding-left: 0;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/